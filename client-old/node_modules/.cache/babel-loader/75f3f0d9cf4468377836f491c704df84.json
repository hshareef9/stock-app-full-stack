{"ast":null,"code":"var _jsxFileName = \"/Users/hajarashareef/stock-app-full-stack/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { NavBar } from './Components/NavBar/NavBar.js';\nimport { Home } from './Components/Home/Home.js';\nimport { MyStocks } from './Components/MyStocks/MyStocks.js';\nimport { StarterPage } from './Components/StarterPage/StarterPage.js';\nimport { Route, Routes } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectStocks } from './StateManagement/store.js';\nimport { deleteStockDB } from './FetchRequests/deleteStockDB.js';\nimport { deleteStock, saveStock } from './StateManagement/stockSlice.js';\nimport { postStockDB } from './FetchRequests/postStockDB.js';\nimport { putStockDB } from './FetchRequests/putStockDB.js';\nimport { getStockDB } from './FetchRequests/getStockDB.js';\nimport { getAllStocksDB } from './FetchRequests/getAllStocksDB.js';\n\n//This is the main level of the app which routes child components and\n//provides event handlers for changing global state.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const dispatch = useDispatch();\n\n  //This function deletes the specified stock from both the 'My Stocks' page\n  //as well as within the backend postgres database. \n  async function handleDeleteStock(name) {\n    await deleteStockDB(name);\n    await dispatch(await deleteStock(name));\n  }\n\n  //This function saves the specified stock (name, price) to both the \n  //'My Stocks' page as well as within the backend postgres database. \n  async function handleSaveStock(name, price) {\n    await dispatch(await saveStock(name, price));\n    if (name === (await getStockDB(name))) {\n      await putStockDB(name, price);\n    } else {\n      await postStockDB(name, price);\n    }\n  }\n\n  //This function gets all stock and their details (name and price) \n  //from the backend postgres database and saves it to global state.\n  async function getAllStocksDBHandler() {\n    let stocksDB = await getAllStocksDB();\n    await stocksDB.map(async (item, i) => {\n      await dispatch(await saveStock(await item.ticker_symbol, item.price));\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(StarterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Home\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(Home, {\n            handleSaveStock: handleSaveStock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/MyStocks\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(MyStocks, {\n            getAllStocksDBHandler: getAllStocksDBHandler,\n            handleDeleteStock: handleDeleteStock,\n            handleSaveStock: handleSaveStock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["NavBar","Home","MyStocks","StarterPage","Route","Routes","useDispatch","useSelector","selectStocks","deleteStockDB","deleteStock","saveStock","postStockDB","putStockDB","getStockDB","getAllStocksDB","App","dispatch","handleDeleteStock","name","handleSaveStock","price","getAllStocksDBHandler","stocksDB","map","item","i","ticker_symbol"],"sources":["/Users/hajarashareef/stock-app-full-stack/src/App.js"],"sourcesContent":["import './App.css';\nimport {NavBar} from './Components/NavBar/NavBar.js';\nimport {Home} from './Components/Home/Home.js';\nimport {MyStocks} from './Components/MyStocks/MyStocks.js';\nimport {StarterPage} from './Components/StarterPage/StarterPage.js';\nimport {Route, Routes} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {selectStocks} from './StateManagement/store.js';\nimport {deleteStockDB} from './FetchRequests/deleteStockDB.js';\nimport {deleteStock, saveStock} from './StateManagement/stockSlice.js';\nimport {postStockDB} from './FetchRequests/postStockDB.js';\nimport {putStockDB} from './FetchRequests/putStockDB.js';\nimport {getStockDB} from './FetchRequests/getStockDB.js';\nimport {getAllStocksDB} from './FetchRequests/getAllStocksDB.js';\n\n\n\n//This is the main level of the app which routes child components and\n//provides event handlers for changing global state.\nexport function App() {\n  \n  const dispatch= useDispatch();\n\n  //This function deletes the specified stock from both the 'My Stocks' page\n  //as well as within the backend postgres database. \n  async function handleDeleteStock(name){\n    await deleteStockDB(name);\n    await dispatch(await deleteStock(name));\n  }\n\n  //This function saves the specified stock (name, price) to both the \n  //'My Stocks' page as well as within the backend postgres database. \n  async function handleSaveStock(name, price){\n      await dispatch(await saveStock(name, price));\n    if (name === await getStockDB(name)){\n        await putStockDB(name, price);   \n    }\n    else{\n        await postStockDB(name, price);   \n    }  \n}\n\n  //This function gets all stock and their details (name and price) \n  //from the backend postgres database and saves it to global state.\n  async function getAllStocksDBHandler(){\n    let stocksDB= await getAllStocksDB();\n     await stocksDB.map(async(item, i)=>{\n      await dispatch(await saveStock(await item.ticker_symbol, item.price));\n    })\n  }\n  \n  return(\n          <>\n          <Routes>\n            <Route path=\"/\" element={<StarterPage/>}></Route>\n            <Route path=\"/Home\" element={<><NavBar/><Home handleSaveStock={handleSaveStock}/></>}></Route>\n            <Route path=\"/MyStocks\" element={<><NavBar/><MyStocks getAllStocksDBHandler={getAllStocksDBHandler} handleDeleteStock={handleDeleteStock} handleSaveStock={handleSaveStock}/></>}></Route>\n          </Routes>\n          </>\n        )\n}    \n\n      \n\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAAQA,MAAM,QAAO,+BAA+B;AACpD,SAAQC,IAAI,QAAO,2BAA2B;AAC9C,SAAQC,QAAQ,QAAO,mCAAmC;AAC1D,SAAQC,WAAW,QAAO,yCAAyC;AACnE,SAAQC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAC9C,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,YAAY,QAAO,4BAA4B;AACvD,SAAQC,aAAa,QAAO,kCAAkC;AAC9D,SAAQC,WAAW,EAAEC,SAAS,QAAO,iCAAiC;AACtE,SAAQC,WAAW,QAAO,gCAAgC;AAC1D,SAAQC,UAAU,QAAO,+BAA+B;AACxD,SAAQC,UAAU,QAAO,+BAA+B;AACxD,SAAQC,cAAc,QAAO,mCAAmC;;AAIhE;AACA;AAAA;AAAA;AACA,OAAO,SAASC,GAAG,GAAG;EAAA;EAEpB,MAAMC,QAAQ,GAAEX,WAAW,EAAE;;EAE7B;EACA;EACA,eAAeY,iBAAiB,CAACC,IAAI,EAAC;IACpC,MAAMV,aAAa,CAACU,IAAI,CAAC;IACzB,MAAMF,QAAQ,CAAC,MAAMP,WAAW,CAACS,IAAI,CAAC,CAAC;EACzC;;EAEA;EACA;EACA,eAAeC,eAAe,CAACD,IAAI,EAAEE,KAAK,EAAC;IACvC,MAAMJ,QAAQ,CAAC,MAAMN,SAAS,CAACQ,IAAI,EAAEE,KAAK,CAAC,CAAC;IAC9C,IAAIF,IAAI,MAAK,MAAML,UAAU,CAACK,IAAI,CAAC,GAAC;MAChC,MAAMN,UAAU,CAACM,IAAI,EAAEE,KAAK,CAAC;IACjC,CAAC,MACG;MACA,MAAMT,WAAW,CAACO,IAAI,EAAEE,KAAK,CAAC;IAClC;EACJ;;EAEE;EACA;EACA,eAAeC,qBAAqB,GAAE;IACpC,IAAIC,QAAQ,GAAE,MAAMR,cAAc,EAAE;IACnC,MAAMQ,QAAQ,CAACC,GAAG,CAAC,OAAMC,IAAI,EAAEC,CAAC,KAAG;MAClC,MAAMT,QAAQ,CAAC,MAAMN,SAAS,CAAC,MAAMc,IAAI,CAACE,aAAa,EAAEF,IAAI,CAACJ,KAAK,CAAC,CAAC;IACvE,CAAC,CAAC;EACJ;EAEA,oBACQ;IAAA,uBACA,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,eACjD,QAAC,KAAK;QAAC,IAAI,EAAC,OAAO;QAAC,OAAO,eAAE;UAAA,wBAAE,QAAC,MAAM;YAAA;YAAA;YAAA;UAAA,QAAE,uBAAC,IAAI;YAAC,eAAe,EAAED;UAAgB;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS,eAC9F,QAAC,KAAK;QAAC,IAAI,EAAC,WAAW;QAAC,OAAO,eAAE;UAAA,wBAAE,QAAC,MAAM;YAAA;YAAA;YAAA;UAAA,QAAE,uBAAC,QAAQ;YAAC,qBAAqB,EAAEE,qBAAsB;YAAC,iBAAiB,EAAEJ,iBAAkB;YAAC,eAAe,EAAEE;UAAgB;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACnL,iBACN;AAEb;AAAC,GAzCeJ,GAAG;EAAA,QAEDV,WAAW;AAAA;AAAA,KAFbU,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}