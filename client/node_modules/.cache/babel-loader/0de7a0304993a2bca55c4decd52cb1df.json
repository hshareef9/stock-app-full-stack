{"ast":null,"code":"//This function makes a GET request to the stockAppAPI on the backend node.js/express.js\n// server. It returns the names and prices of all stocks saved in the postgres database.\n\nexport async function getAllStocksDB() {\n  const url = process.env.REACT_APP_API_URL + '/getAllStocks';\n  const options = {\n    method: 'GET',\n    headers: {\n      Accept: 'application.json',\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const response = await fetch(url, options);\n    try {\n      if (response.ok) {\n        const data = await response.json();\n        if (data.length != 0) {\n          return data.result;\n        } else {\n          return data;\n        }\n      }\n    }\n    //To catch http errors.\n    catch (error) {\n      throw error;\n    }\n  }\n  //To catch network errors.\n  catch (error) {\n    throw error;\n  }\n}","map":{"version":3,"names":["getAllStocksDB","url","process","env","REACT_APP_API_URL","options","method","headers","Accept","response","fetch","ok","data","json","length","result","error"],"sources":["/Users/hajarashareef/stock-app-full-stack/src/FetchRequests/getAllStocksDB.js"],"sourcesContent":["//This function makes a GET request to the stockAppAPI on the backend node.js/express.js\n// server. It returns the names and prices of all stocks saved in the postgres database.\n\nexport async function getAllStocksDB(){\n    \n    const url= process.env.REACT_APP_API_URL+'/getAllStocks';\n\n    const options = {\n        method: 'GET',\n        headers:{Accept: 'application.json', 'Content-Type': 'application/json'}\n    };\n\n    try{\n    const response= await fetch(url, options);\n        try{\n            if (response.ok){\n                const data= await response.json();\n                if(data.length!=0){\n                    return data.result;\n                }\n                else{\n                    return data;\n                }\n            }\n        }\n        //To catch http errors.\n        catch(error) {\n            throw error;\n        }      \n    }\n    //To catch network errors.\n    catch (error){\n        throw error;\n    } \n}"],"mappings":"AAAA;AACA;;AAEA,OAAO,eAAeA,cAAc,GAAE;EAElC,MAAMC,GAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAC,eAAe;EAExD,MAAMC,OAAO,GAAG;IACZC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAC;MAACC,MAAM,EAAE,kBAAkB;MAAE,cAAc,EAAE;IAAkB;EAC3E,CAAC;EAED,IAAG;IACH,MAAMC,QAAQ,GAAE,MAAMC,KAAK,CAACT,GAAG,EAAEI,OAAO,CAAC;IACrC,IAAG;MACC,IAAII,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAMC,IAAI,GAAE,MAAMH,QAAQ,CAACI,IAAI,EAAE;QACjC,IAAGD,IAAI,CAACE,MAAM,IAAE,CAAC,EAAC;UACd,OAAOF,IAAI,CAACG,MAAM;QACtB,CAAC,MACG;UACA,OAAOH,IAAI;QACf;MACJ;IACJ;IACA;IACA,OAAMI,KAAK,EAAE;MACT,MAAMA,KAAK;IACf;EACJ;EACA;EACA,OAAOA,KAAK,EAAC;IACT,MAAMA,KAAK;EACf;AACJ"},"metadata":{},"sourceType":"module"}