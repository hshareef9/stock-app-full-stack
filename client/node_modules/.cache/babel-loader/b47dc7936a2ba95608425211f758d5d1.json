{"ast":null,"code":"//This is a collection of Redux reducers and actions used to update one \n//slice of global state. \n//More specifically, it stores an array of all saved stocks and deletes \n//specified stocks.\n//The global state is saved in a Redux store object in the store.js file.\n\nconst initialState = {\n  savedStocks: []\n};\nexport const stockReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'SAVE_STOCK':\n      //If stock details are already found in state, return same state without modifications.\n      if (state.savedStocks.find(element => element.name === action.payload.name && element.price === action.payload.price)) {\n        return state;\n      }\n      //If stock exists in state but has a different price, replace stock with new details.\n      else if (state.savedStocks.find(element => element.name === action.payload.name && element.price != action.payload.price)) {\n        let replace = state.savedStocks.find(element => element.name === action.payload.name);\n        let filteredStocks = state.savedStocks.filter(element => element.name != replace.name);\n        return {\n          ...state,\n          savedStocks: [...filteredStocks, {\n            name: action.payload.name,\n            price: action.payload.price\n          }]\n        };\n      }\n      //If stock doesn't exist in state, add stock to state.\n      else {\n        return {\n          ...state,\n          savedStocks: [...state.savedStocks, {\n            name: action.payload.name,\n            price: action.payload.price\n          }]\n        };\n      }\n      break;\n    case 'DELETE_STOCK':\n      //Deletes stock from state.\n      let filteredStocks = state.savedStocks.filter(element => element.name != action.payload.name);\n      return {\n        ...state,\n        savedStocks: filteredStocks\n      };\n      break;\n    default:\n      return state;\n      break;\n  }\n};\nexport function saveStock(name, price) {\n  return {\n    type: 'SAVE_STOCK',\n    payload: {\n      name: name,\n      price: price\n    }\n  };\n}\nexport function deleteStock(name) {\n  return {\n    type: 'DELETE_STOCK',\n    payload: {\n      name: name\n    }\n  };\n}","map":{"version":3,"names":["initialState","savedStocks","stockReducer","state","action","type","find","element","name","payload","price","replace","filteredStocks","filter","saveStock","deleteStock"],"sources":["/Users/hajarashareef/stock-app-full-stack/client/src/StateManagement/stockSlice.js"],"sourcesContent":["//This is a collection of Redux reducers and actions used to update one \n//slice of global state. \n//More specifically, it stores an array of all saved stocks and deletes \n//specified stocks.\n//The global state is saved in a Redux store object in the store.js file.\n\nconst initialState={savedStocks: []};\n\nexport const stockReducer = (state=initialState, action)=>{\n    switch(action.type){\n        case 'SAVE_STOCK':\n            //If stock details are already found in state, return same state without modifications.\n            if (state.savedStocks.find(element => element.name===action.payload.name && element.price===action.payload.price )){\n                return state;\n            }\n            //If stock exists in state but has a different price, replace stock with new details.\n            else if(state.savedStocks.find(element => element.name===action.payload.name && element.price!=action.payload.price )){\n                let replace=state.savedStocks.find(element => element.name===action.payload.name)\n                let filteredStocks= state.savedStocks.filter((element)=>element.name!=replace.name);\n                return {...state, savedStocks: [...filteredStocks, {name: action.payload.name, price: action.payload.price}]}\n            }\n            //If stock doesn't exist in state, add stock to state.\n            else{\n                return {...state, savedStocks: [...state.savedStocks, {name: action.payload.name, price: action.payload.price}]};\n            }\n            break;\n        case 'DELETE_STOCK': \n            //Deletes stock from state.\n            let filteredStocks= state.savedStocks.filter((element)=>element.name!=action.payload.name);\n            return {...state, savedStocks: filteredStocks};\n            break;\n        default:\n            return state;\n            break;\n    }\n}\n\nexport function saveStock(name, price){\n    return (\n            {\n            type: 'SAVE_STOCK',\n            payload: {name: name, price: price} \n            }\n    )\n}\n\nexport function deleteStock(name){\n    return (\n            {\n            type: 'DELETE_STOCK',\n            payload: {name: name}\n            }\n    )\n}\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,YAAY,GAAC;EAACC,WAAW,EAAE;AAAE,CAAC;AAEpC,OAAO,MAAMC,YAAY,GAAG,YAA8B;EAAA,IAA7BC,KAAK,uEAACH,YAAY;EAAA,IAAEI,MAAM;EACnD,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,YAAY;MACb;MACA,IAAIF,KAAK,CAACF,WAAW,CAACK,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAGJ,MAAM,CAACK,OAAO,CAACD,IAAI,IAAID,OAAO,CAACG,KAAK,KAAGN,MAAM,CAACK,OAAO,CAACC,KAAK,CAAE,EAAC;QAC/G,OAAOP,KAAK;MAChB;MACA;MAAA,KACK,IAAGA,KAAK,CAACF,WAAW,CAACK,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAGJ,MAAM,CAACK,OAAO,CAACD,IAAI,IAAID,OAAO,CAACG,KAAK,IAAEN,MAAM,CAACK,OAAO,CAACC,KAAK,CAAE,EAAC;QAClH,IAAIC,OAAO,GAACR,KAAK,CAACF,WAAW,CAACK,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAGJ,MAAM,CAACK,OAAO,CAACD,IAAI,CAAC;QACjF,IAAII,cAAc,GAAET,KAAK,CAACF,WAAW,CAACY,MAAM,CAAEN,OAAO,IAAGA,OAAO,CAACC,IAAI,IAAEG,OAAO,CAACH,IAAI,CAAC;QACnF,OAAO;UAAC,GAAGL,KAAK;UAAEF,WAAW,EAAE,CAAC,GAAGW,cAAc,EAAE;YAACJ,IAAI,EAAEJ,MAAM,CAACK,OAAO,CAACD,IAAI;YAAEE,KAAK,EAAEN,MAAM,CAACK,OAAO,CAACC;UAAK,CAAC;QAAC,CAAC;MACjH;MACA;MAAA,KACI;QACA,OAAO;UAAC,GAAGP,KAAK;UAAEF,WAAW,EAAE,CAAC,GAAGE,KAAK,CAACF,WAAW,EAAE;YAACO,IAAI,EAAEJ,MAAM,CAACK,OAAO,CAACD,IAAI;YAAEE,KAAK,EAAEN,MAAM,CAACK,OAAO,CAACC;UAAK,CAAC;QAAC,CAAC;MACpH;MACA;IACJ,KAAK,cAAc;MACf;MACA,IAAIE,cAAc,GAAET,KAAK,CAACF,WAAW,CAACY,MAAM,CAAEN,OAAO,IAAGA,OAAO,CAACC,IAAI,IAAEJ,MAAM,CAACK,OAAO,CAACD,IAAI,CAAC;MAC1F,OAAO;QAAC,GAAGL,KAAK;QAAEF,WAAW,EAAEW;MAAc,CAAC;MAC9C;IACJ;MACI,OAAOT,KAAK;MACZ;EAAM;AAElB,CAAC;AAED,OAAO,SAASW,SAAS,CAACN,IAAI,EAAEE,KAAK,EAAC;EAClC,OACQ;IACAL,IAAI,EAAE,YAAY;IAClBI,OAAO,EAAE;MAACD,IAAI,EAAEA,IAAI;MAAEE,KAAK,EAAEA;IAAK;EAClC,CAAC;AAEb;AAEA,OAAO,SAASK,WAAW,CAACP,IAAI,EAAC;EAC7B,OACQ;IACAH,IAAI,EAAE,cAAc;IACpBI,OAAO,EAAE;MAACD,IAAI,EAAEA;IAAI;EACpB,CAAC;AAEb"},"metadata":{},"sourceType":"module"}